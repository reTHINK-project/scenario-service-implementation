{
  "version": 3,
  "sources": [
    "../src/index.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "index.js",
  "sourcesContent": [
    "/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n'use strict';\n\n\nimport lwm2mlib from \"lwm2m-node-lib\";\nimport logger from \"logops\";\nimport cmd from \"command-node\";\nimport config from \"./../config\";\nimport TempSensor from \"./TempSensor\";\n\nlogger.format = logger.formatters.dev;\nlogger.setLevel('INFO'); //Initial log-level, overwritten by config later\n\n\nvar client = lwm2mlib.client;\nvar globalDeviceInfo = null;\nvar tempSensor = null;\n\nlogger.debug(\"Initialising from config\");\ninit(config)\n    .catch(function (error) {\n        logger.fatal(\"Error while initialising! Abort.\");\n        if (error) {\n            logger.fatal(error);\n        }\n        process.exit(1);\n    })\n    .then(function () {\n        logger.info(\"Connecting to server\");\n        register() //TODO: add timeout\n            .catch(function (error) {\n                logger.error(\"Could not connect to server!\", error);\n            })\n            .then(function () {\n                logger.info(\"Registered at server '\" + config.connection.host + \":\" + config.connection.port + \"' as '\" + config.connection.endpoint + \"'!\");\n            });\n    });\n\nfunction init(config) {\n    return new Promise(function (resolve, reject) {\n        if (!config || !config.hasOwnProperty(\"client\") || !config.hasOwnProperty(\"connection\")) {\n            reject(new Error(\"Invalid configuration! Can't start.\"));\n        }\n        else {\n            logger.setLevel(config.client.logLevel);\n            client.init(config);\n            initTempSensor(lwm2mlib.client, config.sensors.temperature.refreshInterval);\n\n            resolve();\n        }\n    });\n}\n\nfunction initTempSensor(client, refreshInterval) {\n    tempSensor = new TempSensor(client, refreshInterval);\n    tempSensor.start()\n        .catch((error) => {\n            logger.error(\"Error while starting temperature-sensor!\", error);\n        })\n        .then(() => {\n            logger.info(\"Reading temperature sensor/s\", tempSensor.sensors);\n        });\n}\n\n\nfunction register() {\n    return new Promise(function (resolve, reject) {\n        if (globalDeviceInfo) {\n            reject(new Error(\"Can not register, already registered!\"));\n        }\n        else {\n            client.register(config.connection.host, config.connection.port, config.connection.url, config.connection.endpoint, function (error, deviceInfo) {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    globalDeviceInfo = deviceInfo;\n                    resolve();\n                }\n            })\n        }\n    });\n}\n\nfunction unregister() {\n    return new Promise(function (resolve, reject) {\n        if (!globalDeviceInfo) {\n            reject(new Error(\"Can't unregister, not registered!\"));\n        }\n        else {\n            client.unregister(globalDeviceInfo, function (error) {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    globalDeviceInfo = null;\n                    resolve();\n                }\n            })\n        }\n    });\n}\n\nfunction cmd_showConfig() {\n    logger.info(config);\n}\n\nfunction cmd_stop() {\n    logger.info(\"Stopping client\");\n\n    if (tempSensor) {\n        tempSensor.stop();\n    }\n\n    unregister()\n        .catch(function (error) {\n            logger.error(\"Error while unregistering from server!\");\n            if (error) {\n                logger.error(error);\n            }\n        })\n        .then(function () { //TODO: Fix: Also runs on .catch above\n            logger.info(\"Unregistered from '\" + config.connection.host + \":\" + config.connection.port + \"'!\");\n        })\n        .then(function () { //Always\n            process.exit(0);\n        });\n}\n\nvar commands = {\n    'stop': {\n        parameters: [],\n        description: '\\tStop client',\n        handler: cmd_stop\n    },\n    'config': {\n        parameters: [],\n        description: '\\tShow current configuration',\n        handler: cmd_showConfig\n    }\n};\n\ncmd.initialize(commands, '> ');\n"
  ]
}