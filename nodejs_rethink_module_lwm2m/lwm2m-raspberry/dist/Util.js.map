{"version":3,"sources":["../src/Util.js"],"names":[],"mappings":";;;AAGA;;;;;AAEA,IAAI,OAAO,EAAX;;;;AAIA,KAAK,kBAAL,GAA0B,UAAU,MAAV,EAAkB,SAAlB,EAA6B;AACnD,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,SAAP,KAAqB,WAA1D,EAAuE;AACnE,mBAAO,IAAI,KAAJ,CAAU,8CAAV,CAAP;AACH,SAFD,MAGK;AACD,mBAAO,QAAP,CAAgB,MAAhB,CAAuB,SAAvB,EAAkC,UAAC,KAAD,EAAW;AACzC,oBAAI,KAAJ,EAAW;AACP,2BAAO,KAAP;AACH,iBAFD,MAGK;AACD;AACH;AACJ,aAPD;AAQH;AACJ,KAdM,CAAP;AAeH,CAhBD;;AAkBA,KAAK,iBAAL,GAAyB,UAAU,MAAV,EAAkB,SAAlB,EAA6B,UAA7B,EAAyC,KAAzC,EAAgD;AACrE,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,OAAO,SAAP,KAAqB,WAAtD,IAAqE,OAAO,UAAP,KAAsB,WAA3F,IAA0G,OAAO,KAAP,KAAiB,WAA/H,EAA4I;AACxI,mBAAO,IAAI,KAAJ,CAAU,6CAAV,CAAP;AACH,SAFD,MAGK;AACD,mBAAO,QAAP,CAAgB,WAAhB,CAA4B,SAA5B,EAAuC,UAAvC,EAAmD,KAAnD,EAA0D,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACzE,oBAAI,KAAJ,EAAW;AACP,2BAAO,KAAP;AACH,iBAFD,MAGK;AACD,4BAAQ,MAAR;AACH;AACJ,aAPD;AAQH;AACJ,KAdM,CAAP;AAeH,CAhBD;;kBAkBe,I","file":"Util.js","sourcesContent":["/**\n * Created by pbz on 27.04.16.\n */\n'use strict';\n\nvar util = {};\n\n//Methods wrapped in promises\n\nutil.createClientObject = function (client, objectUri) {\n    return new Promise((resolve, reject) => {\n        if (typeof client === \"undefined\" || typeof objectUri === \"undefined\") {\n            reject(new Error(\"util.createClientObject: Invalid parameters!\"));\n        }\n        else {\n            client.registry.create(objectUri, (error) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve();\n                }\n            })\n        }\n    });\n};\n\nutil.setClientResource = function (client, objectUri, resourceId, value) {\n    return new Promise((resolve, reject) => {\n        if (typeof client === \"undefined\" || typeof objectUri === \"undefined\" || typeof resourceId === \"undefined\" || typeof value === \"undefined\") {\n            reject(new Error(\"util.setClientResource: Invalid parameters!\"));\n        }\n        else {\n            client.registry.setResource(objectUri, resourceId, value, (error, result) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve(result);\n                }\n            });\n        }\n    });\n};\n\nexport default util;"]}