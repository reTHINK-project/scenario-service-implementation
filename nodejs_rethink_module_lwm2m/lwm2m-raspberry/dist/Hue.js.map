{
  "version": 3,
  "sources": [
    "../src/Hue.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "Hue.js",
  "sourcesContent": [
    "/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n'use strict';\n\nimport HueControl from \"philips-hue\";\nimport logger from \"logops\";\nimport async from \"async\";\nimport util from \"./Util\";\n\nclass Hue {\n    constructor(lwm2m, bridge, username) {\n        this._lwm2m = lwm2m;\n        this._hue = new HueControl();\n        this._hue.bridge = bridge;\n        this._hue.username = username;\n    }\n\n    start() { //Get all lights and create lwm2m-objects\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var lights = null;\n\n            this._hue.getLights()\n                .catch(reject)\n                .then((result) => {\n                    lights = result;\n                    return that._initObjects(lights);\n                })\n                .catch(reject)\n                .then(() => {\n                    resolve(lights)\n                })\n        });\n    }\n\n    _initObjects(lights) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var errors = [];\n\n            async.each(Object.keys(lights), (id, callback) => {\n\n                //Create lwm2m-client object to store lamp-data (Object/Resources according to IPSO Standard)\n                util.createClientObject(that._lwm2m, \"/3311/\" + id)\n                    .catch((error) => {\n                        if (error) {\n                            errors.push(error);\n                        }\n                    })\n                    .then(() => {\n                        var obj = \"/3311/\" + id;\n                        var state = lights[id].state;\n                        var setVal = [];\n                        logger.debug(\"Hue: Created lwm2m-object for light '\" + id + \"' '/3311/\" + id + \"'\");\n\n                        //Get initial light info and set resources\n\n                        //On/off state\n                        setVal.push(util.setClientResource(that._lwm2m, obj, 5850, state.on ? \"true\" : \"false\"));\n\n                        //Brightness / Dimmer\n                        setVal.push(util.setClientResource(that._lwm2m, obj, 5851, util.convertRangeRound(state.bri, [1, 254], [1, 100])));\n\n                        //Color\n                        //Only set color if bulb supports it //TODO: Verify check\n                        if (state.xy) {\n                            setVal.push(util.setClientResource(that._lwm2m, obj, 5706, JSON.stringify(state.xy))); //CIE-coords in json format\n                            setVal.push(util.setClientResource(that._lwm2m, obj, 5701, \"CIE_JSON\")); //TODO: might have to wrap in {} for valid JSON\n                            //Philips-hue uses coordinates in C.I.E for colors: http://www.developers.meethue.com/documentation/core-concepts\n                        }\n\n                        Promise.all(setVal) //TODO: replace with different structure, don't cancel on first reject\n                            .catch((error) => {\n                                errors.push(error);\n                                callback();\n                            })\n                            .then((results) => {\n                                logger.debug(\"Hue Set initial light-info: light '\" + id + \"'\", results);\n                                callback();\n                            });\n                    });\n            }, () => {\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve(); //Resolve when all objects have been created (for-each is done)\n                }\n            });\n        });\n    }\n\n    stop() {\n\n    }\n\n    handleWrite(objectType, objectId, resourceId, value) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            if (objectType !== \"3311\") {\n                reject(new Error(\"Invalid objectType for hue!\"));\n            }\n            else {\n                switch (resourceId) {\n                    case \"5850\": //On/off\n                        that._setOnState(objectId, value)\n                            .catch(reject)\n                            .then(resolve);\n                        break;\n                    case \"5851\": //Dimmer (1-100)\n                        if (value >= 1 && value <= 100) {\n                            var briState = {};\n                            briState.bri = util.convertRangeRound(value, [1, 100], [1, 254]);\n                            that._hue.light(objectId).setState(briState)\n                                .catch(reject)\n                                .then(() => {\n                                    logger.debug(\"Hue: Light \" + objectId + \": BRI\", briState);\n                                    resolve();\n                                });\n                        }\n                        else {\n                            reject(new Error(\"Invalid value-range for brightness. Expected 1-100\"));\n                        }\n                        break;\n                    case \"5706\":\n                            var colorCoord = JSON.parse(value);\n                            if (!(colorCoord.hasOwnProperty(\"length\")) || !(colorCoord.length === 2)) { //Test if array [x,y]\n                                reject(new Error(\"Invalid coordinate-array! Expected [x,y]\"));\n                            }\n                            var colorState = {};\n                            colorState.xy = colorCoord;\n\n                            that._hue.light(objectId).setState(colorState)\n                                .catch(reject)\n                                .then(() => {\n                                    logger.debug(\"Hue: Light \" + objectId + \": XY\", colorState); //FIXME: Also runs on catch\n                                    resolve();\n                                });\n                        break;\n                    case \"5701\": //Unit (Colour)\n                        reject(new Error(\"Resource '5701' (Unit) is read only!\"));\n                        break;\n                    case \"5852\": //On Time (R,W)\n                    case \"5805\": //Cumulative active power (R)\n                    case \"5820\": //Power factor (R)\n                        reject(new Error(\"Resource not supported!\"));\n                        break;\n                    default:\n                        reject(new Error(\"Unknown operation for resourceId \" + resourceId));\n                        break;\n                }\n            }\n        });\n    }\n\n    _setOnState(id, state) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var done;\n            if (state == true) {\n                done = that._hue.light(id).on();\n            }\n            else {\n                done = that._hue.light(id).off();\n            }\n            done\n                .catch(reject)\n                .then(() => {\n                    logger.debug(\"Hue: Light \" + id + \" on: \" + state);\n                    resolve();\n                });\n        });\n    }\n\n    get ctl() {\n        return this._hue;\n    }\n}\n\nexport default Hue;"
  ]
}