{"version":3,"sources":["../src/Hue.js"],"names":[],"mappings":"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","file":"Hue.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport HueControl from \"philips-hue\";\nimport logger from \"logops\";\nimport async from \"async\";\nimport util from './Util';\n\nclass Hue {\n    constructor(lwm2m, bridge, username) {\n        this._lwm2m = lwm2m;\n        this._hue = new HueControl();\n        this._hue.bridge = bridge;\n        this._hue.username = username;\n    }\n\n    start() { //Get all lights and create lwm2m-objects\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var lights = null;\n\n            this._hue.getLights()\n                .catch(reject)\n                .then((result) => {\n                    lights = result;\n                    return that._initObjects(lights);\n                })\n                .catch(reject)\n                .then(() => {\n                    resolve(lights)\n                })\n        });\n    }\n\n    _initObjects(lights) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var errors = [];\n\n            async.each(Object.keys(lights), (id, callback) => {\n\n                //Create lwm2m-client object to store lamp-data (Object/Resources according to IPSO Standard)\n                util.createClientObject(that._lwm2m, \"/3311/\" + id)\n                    .catch((error) => {\n                        if (error) {\n                            errors.push(error);\n                        }\n                    })\n                    .then(() => {\n                        var obj = \"/3311/\" + id;\n                        var state = lights[id].state;\n                        var setVal = [];\n                        logger.debug(\"Hue: Created lwm2m-object for light '\" + id + \"' '/3311/\" + id + \"'\");\n\n                        //Get initial light info and set resources\n\n                        //On/off state\n                        setVal.push(util.setClientResource(that._lwm2m, obj, 5850, state.on ? 1 : 0));\n\n                        //Brightness / Dimmer\n                        setVal.push(util.setClientResource(that._lwm2m, obj, 5851, util.convertRangeRound(state.bri, [1, 254], [1, 100])));\n\n                        //Color\n                        //Only set color if bulb supports it //TODO: Verify check\n                        if (state.xy) {\n                            setVal.push(util.setClientResource(that._lwm2m, obj, 5706, JSON.stringify(state.xy))); //CIE-coords in json format\n                            setVal.push(util.setClientResource(that._lwm2m, obj, 5701, \"CIE_JSON\")); //TODO: might have to wrap in {} for valid JSON\n                            //Philips-hue uses coordinates in C.I.E for colors: http://www.developers.meethue.com/documentation/core-concepts\n                        }\n\n                        Promise.all(setVal) //TODO: replace with different structure, don't cancel on first reject\n                            .catch((error) => {\n                                errors.push(error);\n                                callback();\n                            })\n                            .then((results) => {\n                                logger.debug(\"Hue Set initial light-info: light '\" + id + \"'\", results);\n                                callback();\n                            });\n                    });\n            }, () => {\n                if (errors.length > 0) {\n                    reject(errors);\n                }\n                else {\n                    resolve(); //Resolve when all objects have been created (for-each is done)\n                }\n            });\n        });\n    }\n\n    stop() {\n\n    }\n\n    handleWrite(objectType, objectId, resourceId, value) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            if (objectType !== \"3311\") {\n                reject(new Error(\"Invalid objectType for hue!\"));\n            }\n            else {\n                switch (resourceId) {\n                    case \"5850\": //On/off\n                        that._setOnState(objectId, value)\n                            .catch(reject)\n                            .then(resolve);\n                        break;\n                    case \"5851\": //Dimmer (1-100) //TODO: Support 0 as minimum. This should turn off the bulb\n                        if (value >= 1 && value <= 100) {\n                            var briState = {};\n                            briState.bri = util.convertRangeRound(value, [1, 100], [1, 254]);\n                            that._hue.light(objectId).setState(briState)\n                                .catch(reject)\n                                .then(() => {\n                                    logger.debug(\"Hue: Light \" + objectId + \": BRI\", briState);\n                                    resolve();\n                                });\n                        }\n                        else {\n                            reject(new Error(\"Invalid value-range for brightness. Expected 1-100\"));\n                        }\n                        break;\n                    case \"5706\": //Colour\n                        try {\n                            var colorCoord = JSON.parse(value);\n                            if (!(colorCoord.hasOwnProperty(\"length\")) || !(colorCoord.length === 2)) { //Test if array [x,y]\n                                throw new Error(\"Invalid coordinate-array! Expected [x,y]\");\n                            }\n                            var colorState = {};\n                            colorState.xy = colorCoord;\n\n                            that._hue.light(objectId).setState(colorState)\n                                .catch(reject)\n                                .then(() => {\n                                    logger.debug(\"Hue: Light \" + objectId + \": XY\", colorState); //FIXME: Also runs on catch\n                                    resolve();\n                                });\n                        }\n                        catch (e) {\n                            reject(new Error(\"Error while parsing CIE coordinates for colour: \" + e));\n                        }\n                        break;\n                    case \"5701\": //Unit (Colour)\n                        reject(new Error(\"Resource '5701' (Unit) is read only!\"));\n                        break;\n                    case \"5852\": //On Time (R,W)\n                    case \"5805\": //Cumulative active power (R)\n                    case \"5820\": //Power factor (R)\n                        reject(new Error(\"Resource not supported!\"));\n                        break;\n                    default:\n                        reject(new Error(\"Unknown operation for resourceId \" + resourceId));\n                        break;\n                }\n            }\n        });\n    }\n\n    _setOnState(id, state) {\n        var that = this;\n        return new Promise((resolve, reject) => {\n            var done;\n            if (state == true) {\n                done = that._hue.light(id).on();\n            }\n            else {\n                done = that._hue.light(id).off();\n            }\n            done\n                .catch(reject)\n                .then(() => {\n                    logger.debug(\"Hue: Light \" + id + \" on: \" + state);\n                    resolve();\n                });\n        });\n    }\n\n    get ctl() {\n        return this._hue;\n    }\n}\n\nexport default Hue;"]}