{"version":3,"sources":["../../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import logger from 'logops';\nimport lwm2mlib from 'lwm2m-node-lib';\nimport Database from './Database';\nimport Hotel from './models/Hotel';\nimport Device from './models/Device';\n\n'use strict';\n\nlet lwm2m = {};\nlwm2m.server = lwm2mlib.server; //Enables use of all native lwm2m-lib methods\nlwm2m.serverInfo = {};\nlet config = {};\nlet database;\n\nlwm2m.setConfig = function (c) {\n    config = c;\n\n    if (config.server.logLevel) {\n        logger.setLevel(config.server.logLevel);\n    }\n};\n\nlwm2m.getConfig = function () {\n    return config;\n};\n\n//TODO: Promises\nlwm2m.start = function (callback) {\n    if (typeof config === 'undefined') {\n        logger.error(\"Missing configuration!\");\n    }\n\n    database = new Database(config.db.host, config.db.database);\n\n    database.connect(function (error) {\n        if (error) {\n            return callback(error);\n        }\n        database.isInitialised(function (initialised, err) {\n            if (err) {\n                logger.error(err);\n            }\n            else {\n                if (!initialised) {\n                    database.createHotel(config.hotel, function (error) {\n                        if (error) {\n                            logger.error(error);\n                            return callback(error);\n                        }\n\n                        logger.info(\"Database initialised with config-data! Ready to start.\");\n                    });\n                }\n                else {\n                    logger.info(\"Database already initialised. Using existing data.\");\n                }\n            }\n\n            lwm2m.server.start(config.server, function (error, results) {\n                if (error) {\n                    return callback(error);\n                }\n                lwm2m.serverInfo = results;\n                setHandlers(function () {\n                    logger.info(\"Initialised registration handlers\");\n                    callback();\n                });\n\n            });\n\n        });\n    });\n};\n\n\nlwm2m.stop = function (callback) {\n    database.disconnect(function (error) {\n        if (error) {\n            logger.error(error);\n        }\n    });\n\n    if (!lwm2m.serverInfo) {\n        var error = \"Can't stop server. Not running\";\n        logger.error(error);\n        return callback(error);\n    }\n\n    lwm2m.server.stop(lwm2m.serverInfo, function (error) {\n        callback(error);\n    });\n};\n\n\n//TODO: Update references\nfunction registrationHandler(endpoint, lifetime, version, binding, payload, callback) {\n    logger.info('\\nDevice registration:\\n----------------------------\\n');\n    logger.info('Endpoint name: %s\\nLifetime: %s\\nBinding: %s', endpoint, lifetime, binding);\n\n    database.registerDevice(endpoint, true, function (error) {\n        if (error) {\n            logger.error(\"Error while updating device-data\")\n        }\n        logger.debug(\"Device info for '%s' stored in db.\", endpoint);\n\n        callback();\n    });\n}\n\n//TODO: Update references\nfunction unregistrationHandler(device, callback) {\n    logger.info('\\nDevice unregistration:\\n----------------------------\\n');\n    logger.info('Device location: %s', device.name);\n\n    database.registerDevice(device.name, false, function (error) {\n        if (error) {\n            logger.error(\"Error while updating device-data\", error)\n        }\n        logger.debug(\"Device info for '%s' stored in db.\", device.name);\n\n        callback();\n    });\n}\n\nfunction setHandlers(callback) {\n    lwm2m.server.setHandler(lwm2m.serverInfo, 'registration', registrationHandler);\n    lwm2m.server.setHandler(lwm2m.serverInfo, 'unregistration', unregistrationHandler);\n    callback();\n}\n\nexport default lwm2m;"]}