{"version":3,"sources":["../../src/models/Device.js"],"names":["Schema","device","schema","name","type","String","unique","room","Types","ObjectId","ref","registration","registered","Boolean","default","timestamp","Date","now","payload","lastValues","temperature","id","Number","value","unit","humidity","light","isOn","dimmer","color","actuator","applicationType","misc","uri","load","connection","model"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;AACA;;;;;;AAEA,IAAIA,SAAS,mBAASA,MAAtB;AACA,IAAIC,SAAS,EAAb;;AAEAA,OAAOC,MAAP,GAAgB,IAAIF,MAAJ,CAAW;AACvBG,UAAM,EAACC,MAAMC,MAAP,EAAeC,QAAQ,IAAvB,EADiB;AAEvBC,UAAM,EAACH,MAAMJ,OAAOQ,KAAP,CAAaC,QAApB,EAA8BC,KAAK,MAAnC,EAFiB;;AAIvBC,kBAAc;AACVC,oBAAY,EAACR,MAAMS,OAAP,EAAgBC,SAAS,KAAzB,EADF;AAEVC,mBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B,EAFD;AAGVC,iBAASb;AAHC,KAJS;AASvBc,gBAAY;AACRC,qBAAa,CACT;AACIC,gBAAI,EAACjB,MAAMkB,MAAP,EAAehB,QAAQ,IAAvB,EADR;AAEIiB,mBAAOD,MAFX;AAGIE,kBAAMnB,MAHV;AAIIU,uBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B;AAJf,SADS,CADL;AASRQ,kBAAU,CACN;AACIJ,gBAAI,EAACjB,MAAMkB,MAAP,EAAehB,QAAQ,IAAvB,EADR;AAEIiB,mBAAOD,MAFX;AAGIE,kBAAMnB,MAHV;AAIIU,uBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B;AAJf,SADM,CATF;AAiBRS,eAAO,CACH;AACIL,gBAAI,EAACjB,MAAMkB,MAAP,EAAehB,QAAQ,IAAvB,EADR;AAEIH,kBAAME,MAFV;AAGIsB,kBAAMd,OAHV;AAIIe,oBAAQN,MAJZ;AAKIO,mBAAO;AACHN,uBAAO,CAACD,MAAD,EAASA,MAAT,CADJ,EACsB;AACzBE,sBAAMnB;AAFH,aALX;AASIU,uBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B;AATf,SADG,CAjBC;AA8BRa,kBAAU,CACN;AACIT,gBAAI,EAACjB,MAAMkB,MAAP,EAAehB,QAAQ,IAAvB,EADR;AAEIH,kBAAME,MAFV;AAGIsB,kBAAMd,OAHV;AAIIkB,6BAAiB1B,MAJrB;AAKIU,uBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B;AALf,SADM,CA9BF;AAuCRe,cAAM,CACF;AACIC,iBAAK5B,MADT;AAEIkB,mBAAOlB,MAFX;AAGIU,uBAAW,EAACX,MAAMY,IAAP,EAAaF,SAASE,KAAKC,GAA3B;AAHf,SADE;AAvCE;AATW,CAAX,CAAhB;;AA0DAhB,OAAOiC,IAAP,GAAc,UAACC,UAAD,EAAgB;AAC1BlC,WAAOmC,KAAP,GAAeD,WAAWC,KAAX,CAAiB,QAAjB,EAA2BnC,OAAOC,MAAlC,CAAf;AACH,CAFD;;kBAIeD,M","file":"Device.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n'use strict';\nimport mongoose from \"mongoose\";\n\nvar Schema = mongoose.Schema;\nvar device = {};\n\ndevice.schema = new Schema({\n    name: {type: String, unique: true},\n    room: {type: Schema.Types.ObjectId, ref: 'Room'},\n\n    registration: {\n        registered: {type: Boolean, default: false},\n        timestamp: {type: Date, default: Date.now},\n        payload: String\n    },\n    lastValues: {\n        temperature: [\n            {\n                id: {type: Number, unique: true},\n                value: Number,\n                unit: String,\n                timestamp: {type: Date, default: Date.now}\n            }\n        ],\n        humidity: [\n            {\n                id: {type: Number, unique: true},\n                value: Number,\n                unit: String,\n                timestamp: {type: Date, default: Date.now}\n            }\n        ],\n        light: [\n            {\n                id: {type: Number, unique: true},\n                name: String,\n                isOn: Boolean,\n                dimmer: Number,\n                color: {\n                    value: [Number, Number], //x,y\n                    unit: String\n                },\n                timestamp: {type: Date, default: Date.now}\n            }\n        ],\n        actuator: [\n            {\n                id: {type: Number, unique: true},\n                name: String,\n                isOn: Boolean,\n                applicationType: String,\n                timestamp: {type: Date, default: Date.now}\n            }\n        ],\n        misc: [\n            {\n                uri: String,\n                value: String,\n                timestamp: {type: Date, default: Date.now}\n            }\n        ]\n    }\n});\n\ndevice.load = (connection) => {\n    device.model = connection.model('Device', device.schema);\n};\n\nexport default device;"]}