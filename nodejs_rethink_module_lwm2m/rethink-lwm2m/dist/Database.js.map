{
  "version": 3,
  "sources": [
    "../src/Database.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "Database.js",
  "sourcesContent": [
    "/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport mongoose from \"mongoose\";\nimport Hotel from \"./models/Hotel\";\nimport Room from \"./models/Room\";\nimport Device from \"./models/Device\";\nimport async from \"async\";\nimport logger from \"logops\";\n\n\nclass Database {\n\n    constructor(config) {\n        this._config = config;\n    }\n\n    set config(config) {\n        this._config = config;\n    }\n\n    get config() {\n        return this._config;\n    }\n\n    get connection() {\n        return this._connection;\n    }\n\n    connect() {//Assuming Hotel is singleton (in db scope)\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            if (that.connected()) {\n                reject(new Error(\"Already connected or connection pending!\"));\n            }\n            else {\n                that._init().then(resolve);\n            }\n        });\n    }\n\n    _init() {\n        var that = this;\n        return new Promise(function (resolve) {\n            that._connection = mongoose.createConnection(that.config.db.host, that.config.db.database);\n            that.connection.on('error', function mongodbErrorHandler(error) {\n                logger.fatal('Could not establish connection to mongodb!', error);\n                throw new Error(error);\n            });\n            that.connection.once('open', function () {\n                logger.debug('Database.js: connected to mongodb!');\n                Device.load(that.connection);\n                Hotel.load(that.connection);\n                Room.load(that.connection);\n                resolve();\n            });\n        });\n    }\n\n    disconnect() {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            if (that.connected()) {\n                that.connection.close(function () {\n                    resolve();\n                })\n            }\n            else {\n                reject(new Error(\"Can't close db-connection: Not connected!\"));\n            }\n        });\n    }\n\n    connected() {\n        if (typeof this.connection !== 'undefined') {\n            return this.connection.readyState === 1 || this.connection.readyState === 2;\n        }\n        else {\n            return false;\n        }\n    }\n\n    isInitialised() {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            if (!that.connected()) {\n                reject(new Error(\"Not connected to db!\"));\n            }\n            else {\n                that.connection.db.listCollections({name: 'hotels'}) //appended 's' is mongoose-behavior, see: http://bit.ly/1Lq65AJ)\n                    .next(function (err, collinfo) {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(typeof collinfo !== 'undefined' && collinfo !== null);\n                        }\n                    });\n            }\n        });\n    }\n\n\n    createHotel() {\n        var that = this;\n        return new Promise(function (resolve, reject) {\n            if (typeof that.config === 'undefined') {\n                reject(new Error(\"Missing config!\"));\n            }\n            else {\n                if (!that.connected()) {\n                    reject(new Error(\"Can't save data to db! Not connected!\"));\n                }\n                else {\n                    var errors = [];\n\n                    that._parseHotel(errors)\n                        .then(function (errors) {\n                            return that._parseRooms(errors);\n                        })\n                        .then(function (errors) {\n                            return that._parseDevices(errors);\n                        })\n                        .then(function (errors) {\n                            return that._setReferences(errors);\n                        })\n                        .then(function (errors) {\n                            if (errors.length === 0) {\n                                errors = null;\n                            }\n                            resolve(errors);\n                        });\n                }\n            }\n        });\n    }\n\n    _parseHotel(errors) {\n        var that = this;\n        return new Promise(function (resolve) {\n            var newHotel = Hotel.model();\n            newHotel.name = that.config.hotel.name;\n            newHotel.save(function (error) {\n                if (error) {\n                    errors.push(error);\n                }\n                resolve(errors);\n            });\n        })\n    }\n\n    _parseRooms(errors) {\n        var that = this;\n        return new Promise(function (resolve) {\n            if (!that.config.hotel.hasOwnProperty('rooms')) {\n                resolve(errors);\n            }\n            else {\n                logger.debug(\"Room-cfg existing, adding to db.\");\n                var hotel;\n\n                Hotel.model.findOne({name: that.config.hotel.name}, function (error, result) {\n                    if (error) {\n                        errors.push(error);\n                    }\n                    hotel = result;\n\n                    if (!hotel) {\n                        errors.push(new Error(\"Hotel missing in db. Inconsistent data. Not able to link hotel->rooms.\"));\n                    }\n\n                    async.each(that.config.hotel.rooms, function (cfg_room, callback2) {\n                            var room = Room.model();\n                            room.name = cfg_room.name;\n                            room.isBooked = cfg_room.isBooked;\n                            room.members = cfg_room.members;\n                            room.save(function (error) {\n                                if (error) {\n                                    errors.push(error);\n                                }\n                                logger.debug(\"Added room '%s'\", cfg_room.name);\n                                if (hotel) {\n                                    hotel.rooms.push(room); //Add room to hotel-list\n                                    logger.debug(\"Added %s to %s.rooms[]\", room.name, hotel.name);\n                                }\n                                callback2();\n                            });\n\n                        },\n                        function () {\n                            if (hotel) {\n                                hotel.save(function (error) {\n                                    if (error) {\n                                        errors.push(error);\n                                    }\n                                    resolve(errors);\n                                })\n                            }\n                            else {\n                                resolve(errors);\n                            }\n                        }\n                    );\n                });\n            }\n        });\n    }\n\n    _parseDevices(errors) {\n        var that = this;\n        return new Promise(function (resolve) {\n            if (!that.config.hotel.hasOwnProperty('devices')) {\n                resolve(errors);\n            }\n            else {\n                logger.debug(\"Device-cfg existing, adding to db.\");\n\n                async.each(that.config.hotel.devices, function (cfg_device, callback2) {\n                    var device = Device.model();\n                    device.name = cfg_device.name;\n                    device.save(function (error) {\n                        if (error) {\n                            errors.push(error);\n                        }\n                        logger.debug(\"Added device '%s'\", cfg_device.name);\n                        callback2();\n                    });\n                }, function () {\n                    resolve(errors);\n                });\n            }\n        });\n\n    }\n\n    _setReferences(errors) {\n        var that = this;\n        return new Promise(function (resolve) {\n            logger.debug(\"Establishing db-references\");\n            async.each(that.config.hotel.devices, function (cfg_device, callback) {\n                if (!cfg_device.hasOwnProperty('room')) {\n                    logger.debug(\"Device '%s' has no room-reference. Skipping...\", cfg_device.name);\n                    return callback();\n                }\n                Room.model.findOne({name: cfg_device.room}, function (error, room) {\n                    if (error) {\n                        errors.push(new Error(\"Error while querying db\", error));\n                        return callback();\n                    }\n                    if (!room) {\n                        errors.push(new Error(\"Invalid reference '\" + cfg_device.name + \".\" + cfg_device.room + \"'! Room '\" + cfg_device.room + \"' not found.\"));\n                        return callback();\n                    }\n                    Device.model.findOne({name: cfg_device.name}, function (error, device) {\n                        if (error) {\n                            errors.push(new Error(\"Error while querying db\", error));\n                            return callback();\n                        }\n                        if (!device) {\n                            errors.push(new Error(\"Can't set reference, device '\" + cfg_device.name + \"' not found in db\"));\n                            return callback();\n                        }\n                        //Bidirectional\n                        device.room = room;\n                        room.devices.push(device);\n\n                        device.save(function (error) {\n                            if (error) {\n                                errors.push(error);\n                                return callback();\n                            }\n                            room.save(function (error) {\n                                if (error) {\n                                    errors.push(error);\n                                    return callback();\n                                }\n                                logger.debug(\"Linked device '%s' to room '%s'\", device.name, room.name);\n                                callback();\n                            })\n                        });\n                    });\n                });\n            }, function () {\n                resolve(errors);\n            });\n        });\n    }\n\n\n    /*\n     register type:Boolean - Register or de-register device\n     */\n    registerDevice(deviceName, register, payload) {\n        return new Promise(function (resolve, reject) {\n            if (typeof register !== 'boolean') {\n                reject(new Error(\"Invalid param. register, boolean expected.\"));\n            }\n            Device.model.findOne({name: deviceName}, function (error, device) { //Get device by name\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    if (!device) {\n                        logger.debug(\"Device not existing in db, creating ...\");\n\n                        device = Device.model();\n                        device.name = deviceName;\n                    }\n\n                    device.registration.registered = register;\n                    if (register) device.registration.timestamp = Date.now();\n\n                    //Set / remove payload if given\n                    if (register === true) {\n                        if (typeof payload !== 'undefined' && payload !== null)\n                            device.registration.payload = payload;\n                    }\n                    else {\n                        device.registration.payload = null;\n                    }\n\n                    device.save(function (error) {\n                        if (error) {\n                            reject(error);\n                        }\n                        resolve();\n                    });\n                }\n            });\n        });\n    }\n\n    storeValue(deviceName, uri, value) {\n        return new Promise(function (resolve, reject) {\n            Device.model.findOne({name: deviceName}, function (error, device) {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    if (!device) {\n                        reject(new Error(\"Can't store value in db for device '\" + deviceName + \"'! Device not found!\"));\n                    }\n                    else {\n                        var data = {};\n                        var pushNew = true;\n\n                        data.timestamp = Date.now();\n                        data.uri = uri;\n                        data.value = value;\n\n                        if (device.lastValues.length > 0) {\n                            device.lastValues.forEach(function (currValue) {\n                                if (currValue.uri == uri) {\n                                    currValue.value = data.value;\n                                    currValue.timestamp = data.timestamp;\n                                    pushNew = false;\n                                    //TODO: Exit loop, we're done\n                                }\n                            });\n                        }\n                        if (pushNew) {\n                            device.lastValues.push(data);\n                        }\n\n                        device.save(function (error) {\n                            if (error) {\n                                reject(error);\n                            }\n                            else {\n                                resolve();\n                            }\n                        })\n                    }\n                }\n            });\n        });\n    }\n}\n\nexport default Database;"
  ]
}