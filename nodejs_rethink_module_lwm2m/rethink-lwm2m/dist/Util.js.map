{"version":3,"sources":["../src/Util.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;AAGA,IAAI,OAAO,EAAP;;AAEJ,KAAK,QAAL,GAAgB,UAAS,IAAT,EAAe;AAC3B,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,qBAAG,QAAH,CAAY,IAAZ,EAAkB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAC/B,gBAAG,KAAH,EAAU;AACN,uBAAO,KAAP,EADM;aAAV,MAGK;AACD,wBAAQ,IAAR,EADC;aAHL;SADc,CAAlB,CADoC;KAArB,CAAnB,CAD2B;CAAf;;kBAaD","file":"Util.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n'use strict';\nimport fs from \"fs\";\n\nvar util = {};\n\nutil.readFile = function(file) {\n    return new Promise((resolve, reject) => {\n        fs.readFile(file, (error, data) => {\n            if(error) {\n                reject(error);\n            }\n            else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nexport default util;"]}