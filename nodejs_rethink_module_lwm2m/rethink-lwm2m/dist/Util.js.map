{"version":3,"sources":["../src/Util.js"],"names":["util","readFile","file","Promise","resolve","reject","error","data","setNestedValue","obj","keystr","value","dest","arr","split","i","length","write","lwm2m","deviceName","objectTypeId","objectId","resourceTypeId","Error","server","getRegistry","getByName","device","id"],"mappings":"AAAA;;;;;;;;;;;;;;;;;AAiBA;;;;;;AACA;;;;;;AAEA,IAAIA,OAAO,EAAX;;AAEAA,KAAKC,QAAL,GAAgB,UAAUC,IAAV,EAAgB;AAC5B,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,qBAAGJ,QAAH,CAAYC,IAAZ,EAAkB,UAACI,KAAD,EAAQC,IAAR,EAAiB;AAC/B,gBAAID,KAAJ,EAAW;AACPD,uBAAOC,KAAP;AACH,aAFD,MAGK;AACDF,wBAAQG,IAAR;AACH;AACJ,SAPD;AAQH,KATM,CAAP;AAUH,CAXD;;AAaAP,KAAKQ,cAAL,GAAsB,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,KAAvB,EAA8B;AAChD,QAAIC,OAAOH,GAAX;AACA,QAAII,MAAMH,OAAOI,KAAP,CAAa,GAAb,CAAV;AACA,QAAIC,IAAI,CAAR;AACA,WAAOA,IAAIF,IAAIG,MAAJ,GAAa,CAAxB,EAA2BD,GAA3B,EAAgC;AAC5B,YAAI,OAAOH,KAAKC,IAAIE,CAAJ,CAAL,CAAP,KAAwB,WAA5B,EAAyC;AACrCH,iBAAKC,IAAIE,CAAJ,CAAL,IAAe,EAAf;AACH;AACDH,eAAOA,KAAKC,IAAIE,CAAJ,CAAL,CAAP;AACH;AACDH,SAAKC,IAAIE,CAAJ,CAAL,IAAeJ,KAAf;AACH,CAXD;;AAaAX,KAAKiB,KAAL,GAAa,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,YAA7B,EAA2CC,QAA3C,EAAqDC,cAArD,EAAqEX,KAArE,EAA4E;AACrF,WAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,YAAIa,UAAU,IAAV,IAAkB,OAAOA,KAAP,KAAiB,WAAvC,EAAoD;AAChDb,mBAAO,IAAIkB,KAAJ,CAAU,yBAAV,CAAP;AACH,SAFD,MAGK;AACDL,kBAAMM,MAAN,CAAaC,WAAb,GAA2BC,SAA3B,CAAqCP,UAArC,EAAiD,UAACb,KAAD,EAAQqB,MAAR,EAAmB;AAChE,oBAAIrB,KAAJ,EAAW;AACPD,2BAAOC,KAAP;AACH,iBAFD,MAGK;AACDY,0BAAMM,MAAN,CAAaP,KAAb,CAAmBU,OAAOC,EAA1B,EAA8BR,YAA9B,EAA4CC,QAA5C,EAAsDC,cAAtD,EAAsEX,KAAtE,EAA6E,UAACL,KAAD,EAAW;AACpF,4BAAIA,KAAJ,EAAW;AACPD,mCAAOC,KAAP;AACH,yBAFD,MAGK;AACDF;AACH;AACJ,qBAPD;AAQH;AACJ,aAdD;AAgBH;AACJ,KAtBM,CAAP;AAuBH,CAxBD;;kBA0BeJ,I","file":"Util.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n'use strict';\nimport fs from \"fs\";\n\nvar util = {};\n\nutil.readFile = function (file) {\n    return new Promise((resolve, reject) => {\n        fs.readFile(file, (error, data) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(data);\n            }\n        });\n    });\n};\n\nutil.setNestedValue = function (obj, keystr, value) {\n    var dest = obj;\n    var arr = keystr.split(\".\");\n    var i = 0;\n    for (; i < arr.length - 1; i++) {\n        if (typeof dest[arr[i]] === \"undefined\") {\n            dest[arr[i]] = {};\n        }\n        dest = dest[arr[i]];\n    }\n    dest[arr[i]] = value;\n};\n\nutil.write = function (lwm2m, deviceName, objectTypeId, objectId, resourceTypeId, value) {\n    return new Promise((resolve, reject) => {\n        if (lwm2m === null || typeof lwm2m === \"undefined\") {\n            reject(new Error(\"lwm2m-object undefined!\"));\n        }\n        else {\n            lwm2m.server.getRegistry().getByName(deviceName, (error, device) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    lwm2m.server.write(device.id, objectTypeId, objectId, resourceTypeId, value, (error) => {\n                        if (error) {\n                            reject(error);\n                        }\n                        else {\n                            resolve();\n                        }\n                    })\n                }\n            });\n\n        }\n    });\n};\n\nexport default util;"]}