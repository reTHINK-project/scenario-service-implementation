{
  "version": 3,
  "sources": [
    "../src/index.js"
  ],
  "names": [],
  "mappings": ";;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;;;AAMA,IAAI,QAAQ,EAAR;AACJ,MAAM,MAAN,GAAe,uBAAS,MAAT;AACf,MAAM,UAAN,GAAmB,EAAnB;AACA,IAAI,SAAS,EAAT;AACJ,IAAI,iBAAJ;AACA,IAAI,sBAAJ;;AAEA,iBAAO,MAAP,GAAgB,iBAAO,UAAP,CAAkB,GAAlB;;AAEhB,MAAM,SAAN,GAAkB,UAAC,CAAD,EAAO;AACrB,aAAS,CAAT,CADqB;;AAGrB,QAAI,OAAO,MAAP,CAAc,QAAd,EAAwB;AACxB,yBAAO,QAAP,CAAgB,OAAO,MAAP,CAAc,QAAd,CAAhB,CADwB;KAA5B;CAHc;;AAQlB,MAAM,SAAN,GAAkB,YAAM;AACpB,WAAO,MAAP,CADoB;CAAN;;AAIlB,MAAM,KAAN,GAAc,YAAM;AAChB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,OAAO,MAAP,KAAkB,WAAlB,EAA+B;AAC/B,6BAAO,KAAP,CAAa,wBAAb,EAD+B;AAE/B,qBAF+B;SAAnC;AAIA,iBACK,KADL,CACW,MADX,EAEK,IAFL,CAEU,YAAM;AACR,mBAAO,UAAP,CADQ;SAAN,CAFV,CAKK,KALL,CAKW,MALX,EAMK,IANL,CAMU,YAAM;AACR,mBAAO,UAAP,CADQ;SAAN,CANV,CASK,KATL,CASW,MATX,EAUK,IAVL,CAUU,OAVV,EALoC;KAArB,CAAnB,CADgB;CAAN;;AAqBd,SAAS,MAAT,GAAkB;AACd,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,mBAAW,uBAAa,MAAb,CAAX,CADoC;AAEpC,iBAAS,OAAT,GACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,6BAAO,KAAP,CAAa,KAAb,EADc;AAEd,mBAAO,KAAP,EAFc;SAAX,CADX,CAKK,IALL,CAKU,YAAM;AACR,mBAAO,SAAS,aAAT,EAAP,CADQ;SAAN,CALV,CAQK,KARL,CAQW,UAAC,KAAD,EAAW;AACd,6BAAO,KAAP,CAAa,KAAb,EADc;AAEd,mBAAO,KAAP,EAFc;SAAX,CARX,CAYK,IAZL,CAYU,UAAC,WAAD,EAAiB;AACnB,gBAAI,CAAC,WAAD,EAAc;AACd,yBAAS,WAAT,GACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,qCAAO,KAAP,CAAa,KAAb,EADc;AAEd,2BAAO,KAAP,EAFc;iBAAX,CADX,CAKK,IALL,CAKU,UAAC,MAAD,EAAY;AACd,wBAAI,MAAJ,EAAY;AACR,yCAAO,KAAP,CAAa,kCAAb,EAAiD,MAAjD,EADQ;qBAAZ,MAGK;AACD,yCAAO,IAAP,CAAY,wCAAZ,EADC;qBAHL;AAMA,8BAPc;iBAAZ,CALV,CADc;aAAlB,MAgBK;AACD,iCAAO,IAAP,CAAY,oDAAZ,EADC;AAED,0BAFC;aAhBL;SADE,CAZV,CAFoC;KAArB,CAAnB,CADc;CAAlB;;AAwCA,SAAS,QAAT,GAAoB;AAChB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,cAAM,MAAN,CAAa,KAAb,CAAmB,OAAO,MAAP,EAAe,UAAC,KAAD,EAAQ,OAAR,EAAoB;AAClD,gBAAI,KAAJ,EAAW;AACP,iCAAO,KAAP,CAAa,KAAb,EADO;AAEP,uBAAO,KAAP,EAFO;aAAX,MAIK;AACD,sBAAM,UAAN,GAAmB,OAAnB,CADC;AAED,8BAAc,IAAd,CAAmB,OAAnB,EAFC;aAJL;SAD8B,CAAlC,CADoC;KAArB,CAAnB,CADgB;CAApB;;AAgBA,MAAM,IAAN,GAAa,YAAM;AACf,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,CAAC,MAAM,UAAN,EAAkB;;AACnB,mBAAO,KAAP,EADmB;SAAvB;AAGA,sBAAc,KAAd,GACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,6BAAO,KAAP,CAAa,oCAAb,EAAmD,KAAnD,EADc;SAAX,CADX,CAIK,IAJL,CAIU,YAAM;AACR,6BAAO,KAAP,CAAa,uBAAb,EADQ;SAAN,CAJV,CAJoC;AAWpC,iBAAS,UAAT,GACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,6BAAO,KAAP,CAAa,oCAAb,EAAmD,KAAnD,EADc;SAAX,CADX,CAIK,IAJL,CAIU,YAAM;AACR,6BAAO,KAAP,CAAa,sBAAb,EADQ;SAAN,CAJV,CAXoC;AAkBpC,cAAM,MAAN,CAAa,IAAb,CAAkB,MAAM,UAAN,EAAkB,UAAC,KAAD,EAAW;AAC3C,gBAAI,KAAJ,EAAW;AACP,uBAAO,KAAP,EADO;aAAX,MAGK;AACD,iCAAO,KAAP,CAAa,eAAb,EADC;AAED,0BAFC;aAHL;SADgC,CAApC,CAlBoC;KAArB,CAAnB,CADe;CAAN;;AA+Bb,SAAS,mBAAT,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD,OAAjD,EAA0D,OAA1D,EAAmE,OAAnE,EAA4E,QAA5E,EAAsF;AAClF,qBAAO,IAAP,CAAY,wDAAZ,EADkF;AAElF,qBAAO,IAAP,CAAY,4DAAZ,EAA0E,QAA1E,EAAoF,QAApF,EAA8F,OAA9F,EAAuG,OAAvG,EAFkF;;AAIlF,aAAS,cAAT,CAAwB,QAAxB,EAAkC,IAAlC,EAAwC,OAAxC,EACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,yBAAO,KAAP,CAAa,kCAAb,EAAiD,KAAjD,EADc;KAAX,CADX,CAIK,IAJL,CAIU,YAAM;AACR,0BAAkB,QAAlB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,IAArC;AADQ,yBAER,CAAkB,QAAlB,EAA4B,IAA5B,EAAkC,CAAlC,EAAqC,IAArC;AAFQ,gBAGR,GAHQ;KAAN,CAJV,CAJkF;CAAtF;;AAeA,SAAS,qBAAT,CAA+B,MAA/B,EAAuC,QAAvC,EAAiD;AAC7C,qBAAO,IAAP,CAAY,0DAAZ,EAD6C;AAE7C,qBAAO,IAAP,CAAY,qBAAZ,EAAmC,OAAO,IAAP,CAAnC,CAF6C;;AAI7C,aAAS,cAAT,CAAwB,OAAO,IAAP,EAAa,KAArC,EACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,yBAAO,KAAP,CAAa,kCAAb,EAAiD,KAAjD,EADc;KAAX,CADX,CAIK,IAJL,CAIU,QAJV,EAJ6C;CAAjD;;AAYA,SAAS,cAAT,CAAwB,UAAxB,EAAoC,QAApC,EAA8C,UAA9C,EAA0D,QAA1D,EAAoE,KAApE,EAA2E;AACvE,UAAM,MAAN,CAAa,WAAb,GAA2B,GAA3B,CAA+B,QAA/B,EAAyC,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxD,iBAAS,UAAT,CAAoB,OAAO,IAAP,EAAc,MAAM,UAAN,GAAmB,GAAnB,GAAyB,QAAzB,GAAoC,GAApC,GAA0C,UAA1C,EAAuD,KAAzF,EACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,6BAAO,KAAP,CAAa,oDAAb,EAAmE,OAAO,IAAP,EAAa,KAAhF,EADc;SAAX,CADX,CAIK,IAJL,CAIU,YAAM;AACR,6BAAO,KAAP,CAAa,4CAAb,EAA2D,OAAO,IAAP,CAA3D,CADQ;SAAN,CAJV,CADwD;KAAnB,CAAzC,CADuE;AAUvE,qBAAO,KAAP,CAAa,6BAA6B,QAA7B,GAAwC,eAAxC,GAA0D,UAA1D,GAAuE,aAAvE,GAAuF,QAAvF,GAAkG,gBAAlG,GAAqH,UAArH,GAAkI,OAAlI,GAA4I,KAA5I,CAAb,CAVuE;CAA3E;;AAaA,SAAS,iBAAT,CAA2B,UAA3B,EAAuC,UAAvC,EAAmD,QAAnD,EAA6D,UAA7D,EAAyE;AACrE,UAAM,MAAN,CAAa,WAAb,GAA2B,SAA3B,CAAqC,UAArC,EAAiD,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAChE,YAAI,KAAJ,EAAW;AACP,6BAAO,KAAP,CAAa,KAAb,EADO;SAAX,MAGK;AACD,kBAAM,MAAN,CAAa,OAAb,CAAqB,OAAO,EAAP,EAAW,UAAhC,EAA4C,QAA5C,EAAsD,UAAtD,EAAkE,cAAlE,EAAkF,UAAC,KAAD,EAAQ,KAAR,EAAkB;AAChG,oBAAI,KAAJ,EAAW;AACP,qCAAO,KAAP,CAAa,+BAAb,EAA8C,KAA9C,EADO;iBAAX,MAGK;AACD,qCAAO,KAAP,CAAa,yCAAb,EAAwD,UAAxD,EAAoE,KAApE,EADC;AAED,wBAAI,UAAU,EAAV,EAAc;;AACd,yCAAO,KAAP,CAAa,aAAa,UAAb,GAA0B,kBAA1B,GAA+C,UAA/C,GAA4D,GAA5D,GAAkE,QAAlE,GAA6E,GAA7E,GAAmF,UAAnF,GAAgG,sBAAhG,CAAb,CADc;AAEd,8BAAM,MAAN,CAAa,cAAb,CAA4B,OAAO,EAAP,EAAW,UAAvC,EAAmD,QAAnD,EAA6D,UAA7D,EAAyE,YAAM;AAC3E,6CAAO,KAAP,CAAa,4BAAb,EAA2C,OAAO,IAAP,CAA3C,CAD2E;yBAAN,CAAzE,CAFc;qBAAlB,MAMK;AACD,iCAAS,UAAT,CAAoB,UAApB,EAAiC,MAAM,UAAN,GAAmB,GAAnB,GAAyB,QAAzB,GAAoC,GAApC,GAA0C,UAA1C,EAAuD,KAAxF,EACK,KADL,CACW,UAAC,KAAD,EAAW;AACd,6CAAO,KAAP,CAAa,wCAAb,EAAuD,KAAvD,EADc;yBAAX,CADX,CAIK,IAJL,CAIU,YAAM;AACR,6CAAO,KAAP,CAAa,wCAAb,EADQ;yBAAN,CAJV,CADC;qBANL;iBALJ;aAD8E,CAAlF,CADC;SAHL;KAD6C,CAAjD,CADqE;CAAzE;;AAkCA,SAAS,WAAT,GAAuB;AACnB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAa;AAC5B,cAAM,MAAN,CAAa,UAAb,CAAwB,MAAM,UAAN,EAAkB,cAA1C,EAA0D,mBAA1D,EAD4B;AAE5B,cAAM,MAAN,CAAa,UAAb,CAAwB,MAAM,UAAN,EAAkB,gBAA1C,EAA4D,qBAA5D,EAF4B;AAG5B,yBAAO,KAAP,CAAa,4BAAb,EAH4B;AAI5B,kBAJ4B;KAAb,CAAnB,CADmB;CAAvB;;AASA,SAAS,QAAT,GAAoB;AAChB,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,YAAI,CAAC,OAAO,IAAP,CAAY,OAAZ,EAAqB;AACtB,6BAAO,KAAP,CAAa,2BAAb,EADsB;SAA1B,MAGK;AACD,6BAAO,KAAP,CAAa,yBAAb,EADC;AAED,4BAAgB,4BAAkB,OAAO,IAAP,CAAY,IAAZ,EAAkB,OAAO,IAAP,CAAY,IAAZ,EAAkB,OAAO,IAAP,CAAY,GAAZ,EAAiB,OAAO,IAAP,CAAY,IAAZ,EAAkB,QAAzF,CAAhB,CAFC;AAGD,0BAAc,IAAd,GACK,KADL,CACW,iBAAS;AACZ,iCAAO,KAAP,CAAa,qCAAb,EAAoD,KAApD,EADY;AAEZ,uBAAO,KAAP,EAFY;aAAT,CADX,CAKK,IALL,CAKU,YAAM;AACR,iCAAO,IAAP,CAAY,wBAAZ,EADQ;AAER,0BAFQ;aAAN,CALV,CAHC;SAHL;KADe,CAAnB,CADgB;CAApB;;kBAsBe",
  "file": "index.js",
  "sourcesContent": [
    "/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n'use strict';\nimport logger from \"logops\";\nimport lwm2mlib from \"lwm2m-node-lib\";\nimport Database from \"./Database\";\nimport HTTPInterface from \"./HTTPInterface\";\n\nlet lwm2m = {};\nlwm2m.server = lwm2mlib.server; //Enables use of all native lwm2m-lib methods\nlwm2m.serverInfo = {};\nlet config = {};\nlet database;\nlet httpInterface;\n\nlogger.format = logger.formatters.dev;\n\nlwm2m.setConfig = (c) => {\n    config = c;\n\n    if (config.server.logLevel) {\n        logger.setLevel(config.server.logLevel);\n    }\n};\n\nlwm2m.getConfig = () => {\n    return config;\n};\n\nlwm2m.start = () => {\n    return new Promise((resolve, reject) => {\n        if (typeof config === 'undefined') {\n            logger.error(\"Missing configuration!\");\n            reject();\n        }\n        initdb()\n            .catch(reject)\n            .then(() => {\n                return startm2m();\n            })\n            .catch(reject)\n            .then(() => {\n                return initHTTP();\n            })\n            .catch(reject)\n            .then(resolve);\n    });\n\n};\n\nfunction initdb() {\n    return new Promise((resolve, reject) => {\n        database = new Database(config);\n        database.connect()\n            .catch((error) => {\n                logger.error(error);\n                reject(error);\n            })\n            .then(() => {\n                return database.isInitialised()\n            })\n            .catch((error) => {\n                logger.error(error);\n                reject(error);\n            })\n            .then((initialised) => {\n                if (!initialised) {\n                    database.createHotel()\n                        .catch((error) => {\n                            logger.error(error);\n                            reject(error);\n                        })\n                        .then((errors) => {\n                            if (errors) {\n                                logger.error(\"Problems while initialising db: \", errors);\n                            }\n                            else {\n                                logger.info(\"Database initialised with config-data!\");\n                            }\n                            resolve();\n                        });\n                }\n                else {\n                    logger.info(\"Database already initialised. Using existing data.\");\n                    resolve();\n                }\n            });\n    });\n}\n\nfunction startm2m() {\n    return new Promise((resolve, reject) => {\n        lwm2m.server.start(config.server, (error, results) => {\n            if (error) {\n                logger.error(error);\n                reject(error);\n            }\n            else {\n                lwm2m.serverInfo = results;\n                setHandlers().then(resolve);\n            }\n        });\n    });\n}\n\n\nlwm2m.stop = () => {\n    return new Promise((resolve, reject) => {\n        if (!lwm2m.serverInfo) { //If server not running, abort.\n            reject(error);\n        }\n        httpInterface.close()\n            .catch((error) => {\n                logger.error(\"Error while closing httpInterface!\", error);\n            })\n            .then(() => {\n                logger.debug(\"Closed http-interface\");\n            });\n        database.disconnect()\n            .catch((error) => {\n                logger.error(\"Error while disconnecting from db!\", error);\n            })\n            .then(() => {\n                logger.debug(\"Disconnected from db\");\n            });\n        lwm2m.server.stop(lwm2m.serverInfo, (error) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                logger.debug(\"Stopped lwm2m\");\n                resolve();\n            }\n        });\n    });\n};\n\nfunction registrationHandler(endpoint, lifetime, version, binding, payload, callback) {\n    logger.info('\\nDevice registration:\\n----------------------------\\n');\n    logger.info('Endpoint name: %s\\nLifetime: %s\\nBinding: %s\\n Payload: %s', endpoint, lifetime, binding, payload);\n\n    database.registerDevice(endpoint, true, payload)\n        .catch((error) => {\n            logger.error(\"Error while updating device-data\", error);\n        })\n        .then(() => {\n            observeDeviceData(endpoint, 3303, 0, 5700); //Temperature\n            observeDeviceData(endpoint, 3304, 0, 5700); //Humidity\n            callback();\n        });\n}\n\nfunction unregistrationHandler(device, callback) {\n    logger.info('\\nDevice unregistration:\\n----------------------------\\n');\n    logger.info('Device location: %s', device.name);\n\n    database.registerDevice(device.name, false)\n        .catch((error) => {\n            logger.error(\"Error while updating device-data\", error);\n        })\n        .then(callback);\n}\n\n\nfunction observeHandler(objectType, objectId, resourceId, deviceId, value) {\n    lwm2m.server.getRegistry().get(deviceId, (error, device) => {\n        database.storeValue(device.name, ('/' + objectType + '/' + objectId + '/' + resourceId), value)\n            .catch((error) => {\n                logger.error(\"Error while storing observe-data in db! Device: %s\", device.name, error);\n            })\n            .then(() => {\n                logger.debug(\"Stored observe-data for device '%s' in db!\", device.name);\n            });\n    });\n    logger.debug(\"Observe-handler device [\" + deviceId + \", objectType \" + objectType + \", objectId \" + objectId + \", resourceId: \" + resourceId + \"] => \" + value);\n}\n\nfunction observeDeviceData(deviceName, objectType, objectId, resourceId) {\n    lwm2m.server.getRegistry().getByName(deviceName, (error, device) => {\n        if (error) {\n            logger.error(error);\n        }\n        else {\n            lwm2m.server.observe(device.id, objectType, objectId, resourceId, observeHandler, (error, value) => {\n                if (error) {\n                    logger.error(\"Error while starting observe!\", error)\n                }\n                else {\n                    logger.debug(\"Started observe for '%s'. First value: \", deviceName, value);\n                    if (value === '') { //No data => Device does not set data\n                        logger.debug(\"Device '\" + deviceName + \"' does not set /\" + objectType + \"/\" + objectId + \"/\" + resourceId + \"! Canceling observe.\");\n                        lwm2m.server.cancelObserver(device.id, objectType, objectId, resourceId, () => {\n                            logger.debug(\"Observe for '%s' canceled!\", device.name);\n                        });\n                    }\n                    else {\n                        database.storeValue(deviceName, ('/' + objectType + '/' + objectId + '/' + resourceId), value)\n                            .catch((error) => {\n                                logger.error(\"Error while storing initial read-data!\", error);\n                            })\n                            .then(() => {\n                                logger.debug(\"Stored initial read-data from observe.\");\n                            });\n                    }\n                }\n            });\n        }\n    });\n\n}\n\nfunction setHandlers() {\n    return new Promise((resolve) => {\n        lwm2m.server.setHandler(lwm2m.serverInfo, 'registration', registrationHandler);\n        lwm2m.server.setHandler(lwm2m.serverInfo, 'unregistration', unregistrationHandler);\n        logger.debug(\"Set registration handlers.\");\n        resolve();\n    });\n}\n\nfunction initHTTP() {\n    return new Promise((resolve, reject) => {\n        if (!config.http.enabled) {\n            logger.debug(\"httpInterface not enabled\");\n        }\n        else {\n            logger.debug(\"Starting HTTP-interface\");\n            httpInterface = new HTTPInterface(config.http.host, config.http.port, config.http.key, config.http.cert, database);\n            httpInterface.open()\n                .catch(error => {\n                    logger.error(\"Error while starting HTTP-interface\", error);\n                    reject(error);\n                })\n                .then(() => {\n                    logger.info(\"Started HTTP-interface\");\n                    resolve();\n                });\n        }\n    });\n\n}\n\nexport default lwm2m;"
  ]
}