{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/*\n * Copyright [2015-2017] Fraunhofer Gesellschaft e.V., Institute for\n * Open Communication Systems (FOKUS)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n'use strict';\nimport logger from \"logops\";\nimport lwm2mlib from \"lwm2m-node-lib\";\nimport Database from \"./Database\";\nimport HTTPInterface from \"./HTTPInterface\";\n\nlet lwm2m = {};\nlwm2m.server = lwm2mlib.server; //Enables use of all native lwm2m-lib methods\nlwm2m.serverInfo = {};\nlet config = {};\nlet database;\nlet httpInterface;\n\nlogger.format = logger.formatters.dev;\n\nlwm2m.setConfig = (c) => {\n    config = c;\n\n    if (config.server.logLevel) {\n        logger.setLevel(config.server.logLevel);\n    }\n};\n\nlwm2m.getConfig = () => {\n    return config;\n};\n\nlwm2m.start = () => {\n    return new Promise((resolve, reject) => {\n        if (typeof config === 'undefined') {\n            logger.error(\"Missing configuration!\");\n            reject();\n        }\n        initdb()\n            .catch(reject)\n            .then(() => {\n                return startm2m();\n            })\n            .catch(reject)\n            .then(() => {\n                return initHTTP();\n            })\n            .catch(reject)\n            .then(resolve);\n    });\n\n};\n\nfunction initdb() {\n    return new Promise((resolve, reject) => {\n        database = new Database(config);\n        database.connect()\n            .catch((error) => {\n                logger.error(error);\n                reject(error);\n            })\n            .then(() => {\n                return database.isInitialised()\n            })\n            .catch((error) => {\n                logger.error(error);\n                reject(error);\n            })\n            .then((initialised) => {\n                if (!initialised) {\n                    database.createHotel()\n                        .catch((error) => {\n                            logger.error(error);\n                            reject(error);\n                        })\n                        .then((errors) => {\n                            if (errors) {\n                                logger.error(\"Problems while initialising db: \", errors);\n                            }\n                            else {\n                                logger.info(\"Database initialised with config-data!\");\n                            }\n                            resolve();\n                        });\n                }\n                else {\n                    logger.info(\"Database already initialised. Using existing data.\");\n                    resolve();\n                }\n            });\n    });\n}\n\nfunction startm2m() {\n    return new Promise((resolve, reject) => {\n        lwm2m.server.start(config.server, (error, results) => {\n            if (error) {\n                logger.error(error);\n                reject(error);\n            }\n            else {\n                lwm2m.serverInfo = results;\n                setHandlers().then(resolve);\n            }\n        });\n    });\n}\n\n\nlwm2m.stop = () => {\n    return new Promise((resolve, reject) => {\n        if (!lwm2m.serverInfo) { //If server not running, abort.\n            reject(error);\n        }\n        httpInterface.close()\n            .catch((error) => {\n                logger.error(\"Error while closing httpInterface!\", error);\n            })\n            .then(() => {\n                logger.debug(\"Closed http-interface\");\n            });\n        database.disconnect()\n            .catch((error) => {\n                logger.error(\"Error while disconnecting from db!\", error);\n            })\n            .then(() => {\n                logger.debug(\"Disconnected from db\");\n            });\n        lwm2m.server.stop(lwm2m.serverInfo, (error) => { //TODO: Observes somehow do not stop on lwm2m.server stop\n            if (error) {\n                reject(error);\n            }\n            else {\n                logger.debug(\"Stopped lwm2m\");\n                resolve();\n            }\n        });\n    });\n};\n\nfunction registrationHandler(endpoint, lifetime, version, binding, payload, callback) {\n    logger.info('\\nDevice registration:\\n----------------------------\\n');\n    logger.info('Endpoint name: %s\\nLifetime: %s\\nBinding: %s\\n Payload: %s', endpoint, lifetime, binding, payload);\n\n    database.registerDevice(endpoint, true, payload)\n        .catch((error) => {\n            logger.error(\"Error while updating device-data\", error);\n        })\n        .then(() => {\n            //TODO: Make list of objects/resources to observe configurable\n            observeDeviceData(endpoint, 3303, 0, 5700); //Temperature\n            observeDeviceData(endpoint, 3303, 0, 5701); //Unit\n\n            observeDeviceData(endpoint, 3304, 0, 5700); //Humidity\n            observeDeviceData(endpoint, 3304, 0, 5701); //Unit\n\n            //Get list of light-ids\n            var lightIdsMatch = new RegExp(\"<\\/3311[\\/]([0-9]+)>\", \"g\");\n            var lightIds = [];\n            var result = null;\n            do {\n                result = lightIdsMatch.exec(payload);\n                if (result != null) {\n                    lightIds.push(result[1]);\n                }\n            }\n            while (result != null);\n            lightIds.forEach((id) => {\n                observeDeviceData(endpoint, 3311, id, 5850); //Light on/off state\n                observeDeviceData(endpoint, 3311, id, 5851); //Light dimmer\n                observeDeviceData(endpoint, 3311, id, 5706); //Light colour\n                observeDeviceData(endpoint, 3311, id, 5701); //Light colour unit\n            });\n\n            callback();\n        });\n}\n\nfunction unregistrationHandler(device, callback) {\n    logger.info('\\nDevice unregistration:\\n----------------------------\\n');\n    logger.info('Device location: %s', device.name);\n\n    database.registerDevice(device.name, false)\n        .catch((error) => {\n            logger.error(\"Error while updating device-data\", error);\n        })\n        .then(callback);\n}\n\n\nfunction observeHandler(value, objectType, objectId, resourceId, deviceId) {\n    lwm2m.server.getRegistry().get(deviceId, (error, device) => {\n        if (error) {\n            logger.error(\"Error while getting device by id\", error);\n        }\n        else {\n            database.storeValue(device.name, objectType, objectId, resourceId, value)\n                .catch((error) => {\n                    logger.error(\"Error while storing observe-data in db! Device: %s\", device.name, error);\n                })\n                .then(() => {\n                    logger.debug(\"Stored observe-data for device '%s' in db!\", device.name);\n                });\n        }\n    });\n    logger.debug(\"Observe-handler device [deviceId \" + deviceId + \", objectType \" + objectType + \", objectId \" + objectId + \", resourceId: \" + resourceId + \"] => \" + value);\n}\n\nfunction observeDeviceData(deviceName, objectType, objectId, resourceId) {\n    lwm2m.server.getRegistry().getByName(deviceName, (error, device) => {\n        if (error) {\n            logger.error(error);\n        }\n        else {\n            lwm2m.server.observe(device.id, objectType, objectId, resourceId, observeHandler, (error, value) => {\n                if (error) {\n                    logger.error(\"Error while starting observe!\", error)\n                }\n                else {\n                    logger.debug(\"Started observe for '%s'. First value: \", deviceName, value);\n                    if (value === '') { //No data => Device does not set data\n                        logger.debug(\"Device '\" + deviceName + \"' does not set /\" + objectType + \"/\" + objectId + \"/\" + resourceId + \"! Canceling observe.\");\n                        lwm2m.server.cancelObserver(device.id, objectType, objectId, resourceId, () => {\n                            logger.debug(\"Observe for '%s' canceled!\", device.name);\n                        });\n                    }\n                    else {\n                        database.storeValue(deviceName, objectType, objectId, resourceId, value)\n                            .catch((error) => {\n                                logger.error(\"Error while storing initial read-data!\", error);\n                            })\n                            .then(() => {\n                                logger.debug(\"Stored initial read-data from observe.\");\n                            });\n                    }\n                }\n            });\n        }\n    });\n\n}\n\nfunction setHandlers() {\n    return new Promise((resolve) => {\n        lwm2m.server.setHandler(lwm2m.serverInfo, 'registration', registrationHandler);\n        lwm2m.server.setHandler(lwm2m.serverInfo, 'unregistration', unregistrationHandler);\n        logger.debug(\"Set registration handlers.\");\n        resolve();\n    });\n}\n\nfunction initHTTP() {\n    return new Promise((resolve, reject) => {\n        if (!config.http.enabled) {\n            logger.debug(\"httpInterface not enabled\");\n            resolve();\n        }\n        else {\n            logger.debug(\"Starting HTTP-interface\");\n            httpInterface = new HTTPInterface(config.http.host, config.http.port, config.http.key, config.http.cert, database);\n            httpInterface.open()\n                .catch(error => {\n                    logger.error(\"Error while starting HTTP-interface\", error);\n                    reject(error);\n                })\n                .then(() => {\n                    logger.info(\"Started HTTP-interface\");\n                    resolve();\n                });\n        }\n    });\n\n}\n\nexport default lwm2m;"]}